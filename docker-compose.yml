version: '3.8'

networks:
  mcp_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  neo4j_data:
  neo4j_logs:
  mongodb_data:
  redis_data:
  portainer_data:
  comfyui_data:
  minio_data:

services:
  # Reverse Proxy
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - mcp_network
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

  # Neo4j Memory System
  neo4j:
    image: neo4j:2025.05.0
    container_name: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/secure_password_here
      - NEO4J_server_memory_pagecache_size=2G
      - NEO4J_server_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - mcp_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "secure_password_here", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Document Store
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secure_password
      - MONGO_INITDB_DATABASE=mcp
    volumes:
      - mongodb_data:/data/db
    networks:
      - mcp_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7.2.3-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - mcp_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Portainer Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9443:9443"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - mcp_network

  # ComfyUI
  comfyui:
    image: yanwk/comfyui-boot:cu124-slim
    container_name: comfyui
    restart: unless-stopped
    ports:
      - "8188:8188"
    volumes:
      - comfyui_data:/root
      - ./models:/root/ComfyUI/models
      - ./output:/root/ComfyUI/output
    environment:
      - CLI_ARGS=""
    networks:
      - mcp_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # MCP Orchestrator
  mcp-orchestrator:
    image: node:20-slim
    container_name: mcp-orchestrator
    restart: unless-stopped
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - ./mcp-orchestrator:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - mcp_network
    command: npm start
    depends_on:
      - mongodb
      - redis

  # MCP Memory Service
  mcp-memory:
    image: node:20-slim
    container_name: mcp-memory
    restart: unless-stopped
    ports:
      - "3001:3001"
    working_dir: /app
    volumes:
      - ./mcp-memory-blockchain:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3001
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=secure_password_here
    networks:
      - mcp_network
    command: npm start
    depends_on:
      neo4j:
        condition: service_healthy

  # MCP Time Precision
  mcp-time-precision:
    image: node:20-slim
    container_name: mcp-time-precision
    restart: unless-stopped
    ports:
      - "3002:3002"
    working_dir: /app
    volumes:
      - ./mcp-time-precision:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3002
    networks:
      - mcp_network
    command: npm start

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    networks:
      - mcp_network
    command: server /data --console-address ":9001"